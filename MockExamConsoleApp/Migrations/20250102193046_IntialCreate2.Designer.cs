// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MockExamConsoleApp.Data;

#nullable disable

namespace MockExamConsoleApp.Migrations
{
    [DbContext(typeof(FlightContext))]
    [Migration("20250102193046_IntialCreate2")]
    partial class IntialCreate2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MockClassLibrary.Models.Bookings", b =>
                {
                    b.Property<int>("PassengerID")
                        .HasColumnType("int");

                    b.Property<int>("FlightID")
                        .HasColumnType("int");

                    b.Property<double>("BaggageCharge")
                        .HasColumnType("float");

                    b.Property<decimal>("TicketCost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("TicketType")
                        .HasColumnType("int");

                    b.HasKey("PassengerID", "FlightID");

                    b.HasIndex("FlightID");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            PassengerID = 1,
                            FlightID = 2,
                            BaggageCharge = 30.0,
                            TicketCost = 51.83m,
                            TicketType = 0
                        },
                        new
                        {
                            PassengerID = 2,
                            FlightID = 2,
                            BaggageCharge = 10.0,
                            TicketCost = 127m,
                            TicketType = 1
                        },
                        new
                        {
                            PassengerID = 3,
                            FlightID = 3,
                            BaggageCharge = 10.0,
                            TicketCost = 140m,
                            TicketType = 1
                        },
                        new
                        {
                            PassengerID = 4,
                            FlightID = 4,
                            BaggageCharge = 15.0,
                            TicketCost = 50m,
                            TicketType = 0
                        },
                        new
                        {
                            PassengerID = 5,
                            FlightID = 1,
                            BaggageCharge = 15.0,
                            TicketCost = 69m,
                            TicketType = 0
                        },
                        new
                        {
                            PassengerID = 6,
                            FlightID = 5,
                            BaggageCharge = 10.0,
                            TicketCost = 127m,
                            TicketType = 1
                        });
                });

            modelBuilder.Entity("MockClassLibrary.Models.Flights", b =>
                {
                    b.Property<int>("FlightID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FlightID"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlightNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxSeats")
                        .HasColumnType("int");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FlightID");

                    b.ToTable("Flights");

                    b.HasData(
                        new
                        {
                            FlightID = 1,
                            Country = "Italy",
                            DepartureDate = new DateTime(2025, 12, 1, 22, 0, 0, 0, DateTimeKind.Unspecified),
                            Destination = "Rome",
                            FlightNumber = "IT-001",
                            MaxSeats = 110,
                            Origin = "Dublin"
                        },
                        new
                        {
                            FlightID = 2,
                            Country = "England",
                            DepartureDate = new DateTime(2025, 12, 1, 22, 0, 0, 0, DateTimeKind.Unspecified),
                            Destination = "London",
                            FlightNumber = "EN-002",
                            MaxSeats = 110,
                            Origin = "Dublin"
                        },
                        new
                        {
                            FlightID = 3,
                            Country = "France",
                            DepartureDate = new DateTime(2025, 12, 1, 22, 0, 0, 0, DateTimeKind.Unspecified),
                            Destination = "Paris",
                            FlightNumber = "FR-001",
                            MaxSeats = 120,
                            Origin = "Dublin"
                        },
                        new
                        {
                            FlightID = 4,
                            Country = "Belgium",
                            DepartureDate = new DateTime(2025, 12, 1, 22, 0, 0, 0, DateTimeKind.Unspecified),
                            Destination = "Brussels",
                            FlightNumber = "BE-001",
                            MaxSeats = 88,
                            Origin = "Dublin"
                        },
                        new
                        {
                            FlightID = 5,
                            Country = "Ireland",
                            DepartureDate = new DateTime(2025, 12, 1, 22, 0, 0, 0, DateTimeKind.Unspecified),
                            Destination = "Dublin",
                            FlightNumber = "DU-001",
                            MaxSeats = 110,
                            Origin = "London"
                        });
                });

            modelBuilder.Entity("MockClassLibrary.Models.Passengers", b =>
                {
                    b.Property<int>("PassengerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PassengerID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassportNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PassengerID");

                    b.ToTable("Passengers");

                    b.HasData(
                        new
                        {
                            PassengerID = 1,
                            Name = "Fred Farnell",
                            PassportNumber = "P010203"
                        },
                        new
                        {
                            PassengerID = 2,
                            Name = "Tom McManus",
                            PassportNumber = "P896745"
                        },
                        new
                        {
                            PassengerID = 3,
                            Name = "Bill Trimble",
                            PassportNumber = "P231425"
                        },
                        new
                        {
                            PassengerID = 4,
                            Name = "Freda McDonald",
                            PassportNumber = "P235678"
                        },
                        new
                        {
                            PassengerID = 5,
                            Name = "Mary Malone",
                            PassportNumber = "P214587"
                        },
                        new
                        {
                            PassengerID = 6,
                            Name = "Tom McManus",
                            PassportNumber = "P893482"
                        });
                });

            modelBuilder.Entity("MockClassLibrary.Models.Bookings", b =>
                {
                    b.HasOne("MockClassLibrary.Models.Flights", "Flight")
                        .WithMany("Bookings")
                        .HasForeignKey("FlightID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MockClassLibrary.Models.Passengers", "Passenger")
                        .WithMany("Bookings")
                        .HasForeignKey("PassengerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");

                    b.Navigation("Passenger");
                });

            modelBuilder.Entity("MockClassLibrary.Models.Flights", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("MockClassLibrary.Models.Passengers", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
